swagger.api.uri = ${API_URL}

ui.url = ${FRONTEND_URL}

mongodb.uri = ${MONGODB_URI}


# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key=${?APPLICATION_SECRET}

# The application languages
# ~~~~~
play.i18n.langs=["en"]

# Registers the request handler
# ~~~~~
play.http.requestHandler = "play.api.http.DefaultHttpRequestHandler"

# Registers the filters
# ~~~~~
play.filters.enabled += "play.filters.cors.CORSFilter"
play.filters.enabled += "play.filters.headers.SecurityHeadersFilter"
play.filters {
  cors {
    allowedOrigins = [${FRONTEND_URL}]
  }
  hosts {
    allowed = [${FRONTEND_URL}, ${API_URL}]
  }
}



# The application DI modules
# ~~~~~
play.modules.enabled += "modules.BaseModule"
play.modules.enabled += "modules.JobModule"
play.modules.enabled += "modules.SilhouetteModule"
play.modules.enabled += "modules.QuartzSchedulerModule"
play.modules.enabled += "play.api.libs.mailer.MailerModule"
play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoModule"
play.modules.enabled += "play.modules.swagger.SwaggerModule"

play.modules.disabled += "com.mohiva.play.silhouette.api.actions.SecuredErrorHandlerModule"
play.modules.disabled += "com.mohiva.play.silhouette.api.actions.UnsecuredErrorHandlerModule"


# The asset configuration
# ~~~~~
play.assets {
  path = "/public"
  urlPrefix = "/assets"
}

# Akka config
akka {
  loglevel = "INFO"
  jvm-exit-on-fatal-error=off

  # Auth token cleaner
  quartz.schedules.AuthTokenCleaner {
    expression = "0 0 */1 * * ?"
    timezone = "UTC"
    description = "cleanup the auth tokens on every hour"
  }
}

# Play mailer
play.mailer {
  host = "smtp.gmail.com"
  port = 587
  ssl = false
  tls = true
  user = ${MAIL_USER}
  password = ${MAIL_PASSWORD}
}

# Security Filter Configuration - Content Security Policy
play.filters.headers {
  contentSecurityPolicy = "default-src 'self';"
}

// feature flags
egometer {
  features {
    signUp = ${?EGOMETER_FEATURE_SIGNUP}
  }
}

include "application.local.conf"
include "silhouette.conf"